java
servlet/jsp + spring mvc library
spring framework
html css javascript jQuery
oracle database


MVC(Model View Controller)
Model : 비지니스 계층(DB)
View : 프레젠테이션 계층(JSP)
Controller : 어플리케이션의 흐름을 담당(Servlet), View와 Model간의 인터페이스 역할

DispatcherServlet
Servlet/JSP 에서 사용자 요청이 발생하면 작동하는 첫 번째 서블릿
Spring MVC 프로젝트 설정에서 가장 먼저 해야 할 일은 DispatcherServlet 클래스를 
Spring MVC에서 재정의한 클래스로 설정하는 일이다.

SpringMVC 프로젝트 설정하는 방식 XML JAVA

pom.xml
servlet-api
jsp-api
jstl
springWebMVC

GetParameter6

Servlet / JSP 에서 파라미터 데이터를 추출할 때 HttpServletRequest 객체를 통하게 되는데
Spring MVC에서 이 객체를 통해서 주입 받아 사용한다.

WebRequest는 HttpServletRequest 클래스를 확장한 클래스

@PathVariable
데이터 요청 주소가 있을 경우 값을 주입 받을 수 있는 어노테이션
요청주소 / 값1 / 값2 / 값3

@RequestParam
파라미터 데이터를 직접 주입 받을 수 있다
지정된 변수의 이름과 파라미터의 이름이 같을 경우 값을 주입 받는다.
가능한 경우 형변환 처리도 해준다.
value : 파라미터의 이름과 변수의 이름이 다를 경우 파라미터 이름을 지정한다.
required : false를 설정하면 지정된 이름의 파라미터가 없을 경우 null이 주입된다.

GetParameterObject7
Map으로 주입받기
클라이언트가 전달하는 모든 파라미터 데이터를 한번에 Map으로 받는다
단 동일명으로 전달되는 2개 이상의 파라미터는 하나만 저장된다.
동일명으로 전달되는 파라미터가 2개 이상이라면 List로 주입받는다.

@ModelAtrribute 어노테이션을 사용하면 파라미터 객체로 주입받을 수 있다
전달되는 파라미터의 이름과 동일한 프로퍼티에 자동으로 주입된다.
생략가능
커맨드 객체(Command Object)라고 부른다.


ViewResolver8
컨트롤러에서 전달 받은 view의 이름을 토대로 jsp를 찾아 선택하고 jsp데이터를 분석해 응답 결과를 전달하는 요소

Spring MVC는 jsp를 처리할 때 HttpServletRequest 객체를 jsp쪽으로 전달한다.
ViewResolver는 이를 이용해 jsp작업시 데이터를 사용할 수 있다.

Model
Model 객체를 주입 받아 셋팅하면 HttpServletRequest 객체에 담겨 이를 jsp로 전달할 수 있다.

ModelAndView
ModelAndView는 Model에 값을 셋팅하는 기능과 View의 이름을 지정하는 기능을 모두 가지고 있다.

ViewResolver에 의해 jsp가 실행되고 응답결과가 만들어진다.
Controller에서 View를 지정할 때 ViewResolver가 사용할 데이터를 Request 영역에 저장할 수 있다.


CommandObject9
커맨드 객체
클라이언트가 전달해 주는 파라미터 데이터를 주입 받기 위해 사용하는 객체
커맨드 객체는 HttpServletRequest 객체에 자동으로 담기고 jsp로 전달된다.
이 때 HttpServletRequest 객체에 저장되는 이름은 클래스 이름으로 결정된다.
HttpServletRequest에 저장되는 이름을 지정하고 싶다면 ModelAttribute 어노테이션에 지정하면 된다.


FormCustomTag10
Spring 에서는 <form:태그명> 형태로 되어있는 커스텀 태그 제공
Form 커스텀 태그를 활용하면 Model 객체에 들어있는 값을 form 요소에 주입시킬 수 있다.
회원 정보 수정 등 정보 수정페이지를 구성할 때 요긴하게 사용할 수 있다.